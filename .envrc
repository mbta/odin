use asdf

dotenv

# automatically create and enter python venv
layout python3

# this fuction allows project dependencies to be managed by pip-tools
#  a 'pyproject.toml' file is required in the root of the project
function use_pip-tools() {
    local python_version
    local nc='\033[0m'
    local red='\033[0;31m'
    local green='\033[0;32m'
    local blue='\033[0;34m'
    local cyan='\033[0;36m'
    local pip_prefix="$green[use pip-tools]$nc"
    python_version=$(python3 -c "import platform; print(platform.python_version())")
    # if VIRTUAL_ENV is not set to direnv default, delete direnv default dir as clean-up
    if [[ "${VIRTUAL_ENV}" != *"$(direnv_layout_dir)/python-$python_version"* && -d $(direnv_layout_dir) ]]; then
        echo -e"$pip_prefix custom VIRTUAL_ENV set ($VIRTUAL_ENV), deleting ($(direnv_layout_dir))"
        rm -rf $(direnv_layout_dir)
    fi

    local has_pip=0
    if has pip; then
        if [[ $(which pip) = $PWD/* ]]; then
            has_pip=1
        fi
    fi
    if [ $has_pip -eq 0 ]; then
        echo -e "$pip_prefix$red ERROR: No pip installed via layout; add 'layout python3' to .envrc$nc"
        return 1
    fi

    if ! has pip-compile; then
        echo -e "$pip_prefix pip-tools missing; installing..."
        pip install pip-tools
    fi

    if [ ! -f "pyproject.toml" ]; then
        echo -e "$pip_prefix$red ERROR: No 'pyproject.toml' file exists, please create one!$nc"
        return 1
    fi

    echo -e "$pip_prefix syncing (dev)requirements to Python virtual environment ($VIRTUAL_ENV)..."
    # create requirements files
    pip-compile --quiet --strip-extras -o requirements.txt
    pip-compile --quiet --strip-extras --extra=dev -o requirements-dev.txt
    # install all pinned requirements to virtual environment
    pip-sync requirements.txt requirements-dev.txt
    # install local project from /src as editable, so code changes are reflected without re-install
    echo -e "$pip_prefix installing project to Python virtual environment ($VIRTUAL_ENV)..."
    pip install --editable .

    watch_file pyproject.toml
    echo -e "$pip_prefix Python virtual environment sucessfully created, updated and activated!"
    echo -e "$pip_prefix Running $blue'which python'$nc should show $cyan'$VIRTUAL_ENV/bin/python'$nc"
    echo -e "$pip_prefix Running $blue'python --version'$nc should show $cyan'Python $python_version'$nc"
}

use pip-tools
